# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddPlaceInput {
  address: String
  isFav: Boolean
  latitude: Float
  longitude: Float
  name: String
}

type Chat {
  createdAt: String!
  driver: User!
  driverId: Int!
  id: ID!
  messageId: Int!
  messages: [Message!]!
  passenger: User!
  passengerId: Int!
  pickUpAddress: String!
  ride: Ride!
  rideId: Int
  updatedAt: String!
}

input CompleteEmailVerificationInput {
  email: String!
  key: String!
}

input CompletePhoneVerificationInput {
  key: String!
  phone: String!
}

input EditPlaceInput {
  id: ID!
  isFav: Boolean
  name: String
}

input EmailSignInInput {
  email: String!
  password: String!
}

input EmailSignUpInput {
  age: Float!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  phoneNumber: String!
  profilePhoto: String!
}

input FaceBookConnectInput {
  email: String!
  fbId: String!
  firstName: String!
  lastName: String!
}

input GetChatInput {
  id: ID!
}

type GetChatResponse {
  chat: Chat
  error: String
  ok: Boolean!
}

type GetMyPlaceResponse {
  error: String
  ok: Boolean!
  places: [Place!]
}

type GetMyProfileResponse {
  error: String
  ok: Boolean!
  user: User
}

type GetNearByRidesResponse {
  error: String
  ok: Boolean!
  ride: Ride
}

type GetNearbyDriversResponse {
  drivers: [User!]
  error: String
  ok: Boolean!
}

input GetRideInput {
  id: ID!
}

type Message {
  chat: Chat!
  chatId: Int
  createdAt: String!
  id: ID!
  text: String!
  updatedAt: String!
  user: User!
  userId: Int
}

type Mutation {
  AddPlace(data: AddPlaceInput!): Response!
  CompleteEmailVerification(data: CompleteEmailVerificationInput!): ResponseWithToken!
  CompletePhoneVerification(data: CompletePhoneVerificationInput!): ResponseWithToken!
  DeletePlace(data: EditPlaceInput!): Response!
  EditPlace(data: EditPlaceInput!): Response!
  EmailConnect(data: EmailSignInInput!): ResponseWithToken!
  EmailSignUp(data: EmailSignUpInput!): ResponseWithToken!
  FaceBookConnect(data: FaceBookConnectInput!): ResponseWithToken!
  PhoneVerification(data: PhoneVerificationInput!): Response!
  ReportMovement(data: ReportMovementInput!): Response!
  RequestRide(data: RequestRideInput!): RequestRideResponse!
  SendChat(data: SendChatInput!): SendChatResponse!
  ToggleDrivingMode: Response!
  UpdateProfile(data: UpdateProfileInput!): Response!
  UpdateRide(data: UpdateRideInput!): UpdateRideResponse!
}

input PhoneVerificationInput {
  phone: String!
}

type Place {
  address: String!
  createdAt: String!
  id: ID!
  isFav: Boolean!
  latitude: Float!
  longitude: Float!
  name: String!
  updatedAt: String!
  user: User!
}

type Query {
  GetChat(data: GetChatInput!): GetChatResponse!
  GetMyPlaces: GetMyPlaceResponse!
  GetMyProfile: GetMyProfileResponse!
  GetNearbyDrivers: GetNearbyDriversResponse!
  GetRide(data: GetRideInput!): RequestRideResponse!
  NearByRides: GetNearByRidesResponse!
  RequestEmailVerification: Response!
  returnHello(name: String!): String!
}

input ReportMovementInput {
  lastLatitude: Float
  lastLongitude: Float
  lastOrientation: Float
}

input RequestRideInput {
  distance: String!
  dropOffAddress: String!
  dropOffLatitude: Float!
  dropOffLongitude: Float!
  duration: String!
  pickUpAddress: String!
  pickUpLatitude: Float!
  pickUpLongitude: Float!
  price: Float!
}

type RequestRideResponse {
  error: String
  ok: Boolean!
  ride: Ride
}

type Response {
  error: String
  ok: Boolean!
}

type ResponseWithToken {
  error: String
  ok: Boolean!
  token: String
}

type Ride {
  chat: Chat
  chatId: Int
  createdAt: String!
  distance: String!
  driver: User
  driverId: Int
  dropOffAddress: String!
  dropOffLatitude: Float!
  dropOffLongitude: Float!
  duration: String!
  id: ID!
  passenger: User!
  passengerId: Int
  pickUpAddress: String!
  pickUpLatitude: Float!
  pickUpLongitude: Float!
  price: Float!
  status: String!
  updatedAt: String!
}

input SendChatInput {
  id: ID!
  message: String!
}

type SendChatResponse {
  error: String
  message: Message
  ok: Boolean!
}

type Subscription {
  chatRoom: Message!
  driverUpdate: User!
  nearByRide: Ride!
  rideStatus: Ride!
}

input UpdateProfileInput {
  age: Float
  email: String
  firstName: String
  lastName: String
  password: String
  profilePhoto: String
}

input UpdateRideInput {
  id: ID!
  status: String
}

type UpdateRideResponse {
  error: String
  ok: Boolean!
  ride: Ride
}

type User {
  age: Int!
  chatsAsDriver: [Chat!]!
  chatsAsPassenger: [Chat!]!
  createdAt: String!
  email: String!
  fbId: String!
  firstName: String!
  id: ID!
  isDriving: Boolean!
  isRiding: Boolean!
  isTaken: Boolean!
  lastLatitude: Float!
  lastLongitude: Float!
  lastName: String!
  lastOrientation: Float!
  messages: [Message!]!
  password: String!
  phoneNumber: String!
  places: [Place!]!
  profilePhoto: String!
  ridesAsDriver: [Ride!]!
  ridesAsPassenger: [Ride!]!
  updatedAt: String!
  verifiedEmail: Boolean!
  verifiedPhoneNumber: Boolean!
}
